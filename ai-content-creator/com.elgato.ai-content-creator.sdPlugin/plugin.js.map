{"version":3,"file":"plugin.js","sources":["../src/core/websocket-manager.ts","../node_modules/dotenv/lib/main.js","../src/core/openai-service.ts","../src/plugin.ts"],"sourcesContent":["import WebSocket from 'ws';\n\nexport class WebSocketManager {\n  private ws: WebSocket;\n  private pluginUUID: string;\n\n  constructor(port: number, pluginUUID: string, registerEvent: string, info: string) {\n    this.pluginUUID = pluginUUID;\n    this.ws = new WebSocket(`ws://127.0.0.1:${port}`);\n\n    this.ws.on('open', () => {\n      this.register(registerEvent, info);\n    });\n  }\n\n  private register(event: string, info: string): void {\n    this.ws.send(JSON.stringify({\n      event: event,\n      uuid: this.pluginUUID\n    }));\n  }\n\n  public send(event: string, context: string, payload: any = {}): void {\n    if (this.ws.readyState === WebSocket.OPEN) {\n      this.ws.send(JSON.stringify({\n        action: event,\n        event: 'sendToPlugin',\n        context: context,\n        payload: payload\n      }));\n    }\n  }\n\n  public showAlert(context: string): void {\n    if (this.ws.readyState === WebSocket.OPEN) {\n      this.ws.send(JSON.stringify({\n        event: 'showAlert',\n        context: context\n      }));\n    }\n  }\n\n  public showOk(context: string): void {\n    if (this.ws.readyState === WebSocket.OPEN) {\n      this.ws.send(JSON.stringify({\n        event: 'showOk',\n        context: context\n      }));\n    }\n  }\n\n  public setTitle(context: string, title: string): void {\n    if (this.ws.readyState === WebSocket.OPEN) {\n      this.ws.send(JSON.stringify({\n        event: 'setTitle',\n        context: context,\n        payload: {\n          title: title\n        }\n      }));\n    }\n  }\n\n  public setState(context: string, state: number): void {\n    if (this.ws.readyState === WebSocket.OPEN) {\n      this.ws.send(JSON.stringify({\n        event: 'setState',\n        context: context,\n        payload: {\n          state: state\n        }\n      }));\n    }\n  }\n\n  public onMessage(callback: (message: any) => void): void {\n    this.ws.on('message', (data: WebSocket.Data) => {\n      const message = JSON.parse(data.toString());\n      callback(message);\n    });\n  }\n} ","const fs = require('fs')\nconst path = require('path')\nconst os = require('os')\nconst crypto = require('crypto')\nconst packageJson = require('../package.json')\n\nconst version = packageJson.version\n\nconst LINE = /(?:^|^)\\s*(?:export\\s+)?([\\w.-]+)(?:\\s*=\\s*?|:\\s+?)(\\s*'(?:\\\\'|[^'])*'|\\s*\"(?:\\\\\"|[^\"])*\"|\\s*`(?:\\\\`|[^`])*`|[^#\\r\\n]+)?\\s*(?:#.*)?(?:$|$)/mg\n\n// Parse src into an Object\nfunction parse (src) {\n  const obj = {}\n\n  // Convert buffer to string\n  let lines = src.toString()\n\n  // Convert line breaks to same format\n  lines = lines.replace(/\\r\\n?/mg, '\\n')\n\n  let match\n  while ((match = LINE.exec(lines)) != null) {\n    const key = match[1]\n\n    // Default undefined or null to empty string\n    let value = (match[2] || '')\n\n    // Remove whitespace\n    value = value.trim()\n\n    // Check if double quoted\n    const maybeQuote = value[0]\n\n    // Remove surrounding quotes\n    value = value.replace(/^(['\"`])([\\s\\S]*)\\1$/mg, '$2')\n\n    // Expand newlines if double quoted\n    if (maybeQuote === '\"') {\n      value = value.replace(/\\\\n/g, '\\n')\n      value = value.replace(/\\\\r/g, '\\r')\n    }\n\n    // Add to object\n    obj[key] = value\n  }\n\n  return obj\n}\n\nfunction _parseVault (options) {\n  const vaultPath = _vaultPath(options)\n\n  // Parse .env.vault\n  const result = DotenvModule.configDotenv({ path: vaultPath })\n  if (!result.parsed) {\n    const err = new Error(`MISSING_DATA: Cannot parse ${vaultPath} for an unknown reason`)\n    err.code = 'MISSING_DATA'\n    throw err\n  }\n\n  // handle scenario for comma separated keys - for use with key rotation\n  // example: DOTENV_KEY=\"dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=prod,dotenv://:key_7890@dotenvx.com/vault/.env.vault?environment=prod\"\n  const keys = _dotenvKey(options).split(',')\n  const length = keys.length\n\n  let decrypted\n  for (let i = 0; i < length; i++) {\n    try {\n      // Get full key\n      const key = keys[i].trim()\n\n      // Get instructions for decrypt\n      const attrs = _instructions(result, key)\n\n      // Decrypt\n      decrypted = DotenvModule.decrypt(attrs.ciphertext, attrs.key)\n\n      break\n    } catch (error) {\n      // last key\n      if (i + 1 >= length) {\n        throw error\n      }\n      // try next key\n    }\n  }\n\n  // Parse decrypted .env string\n  return DotenvModule.parse(decrypted)\n}\n\nfunction _log (message) {\n  console.log(`[dotenv@${version}][INFO] ${message}`)\n}\n\nfunction _warn (message) {\n  console.log(`[dotenv@${version}][WARN] ${message}`)\n}\n\nfunction _debug (message) {\n  console.log(`[dotenv@${version}][DEBUG] ${message}`)\n}\n\nfunction _dotenvKey (options) {\n  // prioritize developer directly setting options.DOTENV_KEY\n  if (options && options.DOTENV_KEY && options.DOTENV_KEY.length > 0) {\n    return options.DOTENV_KEY\n  }\n\n  // secondary infra already contains a DOTENV_KEY environment variable\n  if (process.env.DOTENV_KEY && process.env.DOTENV_KEY.length > 0) {\n    return process.env.DOTENV_KEY\n  }\n\n  // fallback to empty string\n  return ''\n}\n\nfunction _instructions (result, dotenvKey) {\n  // Parse DOTENV_KEY. Format is a URI\n  let uri\n  try {\n    uri = new URL(dotenvKey)\n  } catch (error) {\n    if (error.code === 'ERR_INVALID_URL') {\n      const err = new Error('INVALID_DOTENV_KEY: Wrong format. Must be in valid uri format like dotenv://:key_1234@dotenvx.com/vault/.env.vault?environment=development')\n      err.code = 'INVALID_DOTENV_KEY'\n      throw err\n    }\n\n    throw error\n  }\n\n  // Get decrypt key\n  const key = uri.password\n  if (!key) {\n    const err = new Error('INVALID_DOTENV_KEY: Missing key part')\n    err.code = 'INVALID_DOTENV_KEY'\n    throw err\n  }\n\n  // Get environment\n  const environment = uri.searchParams.get('environment')\n  if (!environment) {\n    const err = new Error('INVALID_DOTENV_KEY: Missing environment part')\n    err.code = 'INVALID_DOTENV_KEY'\n    throw err\n  }\n\n  // Get ciphertext payload\n  const environmentKey = `DOTENV_VAULT_${environment.toUpperCase()}`\n  const ciphertext = result.parsed[environmentKey] // DOTENV_VAULT_PRODUCTION\n  if (!ciphertext) {\n    const err = new Error(`NOT_FOUND_DOTENV_ENVIRONMENT: Cannot locate environment ${environmentKey} in your .env.vault file.`)\n    err.code = 'NOT_FOUND_DOTENV_ENVIRONMENT'\n    throw err\n  }\n\n  return { ciphertext, key }\n}\n\nfunction _vaultPath (options) {\n  let possibleVaultPath = null\n\n  if (options && options.path && options.path.length > 0) {\n    if (Array.isArray(options.path)) {\n      for (const filepath of options.path) {\n        if (fs.existsSync(filepath)) {\n          possibleVaultPath = filepath.endsWith('.vault') ? filepath : `${filepath}.vault`\n        }\n      }\n    } else {\n      possibleVaultPath = options.path.endsWith('.vault') ? options.path : `${options.path}.vault`\n    }\n  } else {\n    possibleVaultPath = path.resolve(process.cwd(), '.env.vault')\n  }\n\n  if (fs.existsSync(possibleVaultPath)) {\n    return possibleVaultPath\n  }\n\n  return null\n}\n\nfunction _resolveHome (envPath) {\n  return envPath[0] === '~' ? path.join(os.homedir(), envPath.slice(1)) : envPath\n}\n\nfunction _configVault (options) {\n  _log('Loading env from encrypted .env.vault')\n\n  const parsed = DotenvModule._parseVault(options)\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsed, options)\n\n  return { parsed }\n}\n\nfunction configDotenv (options) {\n  const dotenvPath = path.resolve(process.cwd(), '.env')\n  let encoding = 'utf8'\n  const debug = Boolean(options && options.debug)\n\n  if (options && options.encoding) {\n    encoding = options.encoding\n  } else {\n    if (debug) {\n      _debug('No encoding is specified. UTF-8 is used by default')\n    }\n  }\n\n  let optionPaths = [dotenvPath] // default, look for .env\n  if (options && options.path) {\n    if (!Array.isArray(options.path)) {\n      optionPaths = [_resolveHome(options.path)]\n    } else {\n      optionPaths = [] // reset default\n      for (const filepath of options.path) {\n        optionPaths.push(_resolveHome(filepath))\n      }\n    }\n  }\n\n  // Build the parsed data in a temporary object (because we need to return it).  Once we have the final\n  // parsed data, we will combine it with process.env (or options.processEnv if provided).\n  let lastError\n  const parsedAll = {}\n  for (const path of optionPaths) {\n    try {\n      // Specifying an encoding returns a string instead of a buffer\n      const parsed = DotenvModule.parse(fs.readFileSync(path, { encoding }))\n\n      DotenvModule.populate(parsedAll, parsed, options)\n    } catch (e) {\n      if (debug) {\n        _debug(`Failed to load ${path} ${e.message}`)\n      }\n      lastError = e\n    }\n  }\n\n  let processEnv = process.env\n  if (options && options.processEnv != null) {\n    processEnv = options.processEnv\n  }\n\n  DotenvModule.populate(processEnv, parsedAll, options)\n\n  if (lastError) {\n    return { parsed: parsedAll, error: lastError }\n  } else {\n    return { parsed: parsedAll }\n  }\n}\n\n// Populates process.env from .env file\nfunction config (options) {\n  // fallback to original dotenv if DOTENV_KEY is not set\n  if (_dotenvKey(options).length === 0) {\n    return DotenvModule.configDotenv(options)\n  }\n\n  const vaultPath = _vaultPath(options)\n\n  // dotenvKey exists but .env.vault file does not exist\n  if (!vaultPath) {\n    _warn(`You set DOTENV_KEY but you are missing a .env.vault file at ${vaultPath}. Did you forget to build it?`)\n\n    return DotenvModule.configDotenv(options)\n  }\n\n  return DotenvModule._configVault(options)\n}\n\nfunction decrypt (encrypted, keyStr) {\n  const key = Buffer.from(keyStr.slice(-64), 'hex')\n  let ciphertext = Buffer.from(encrypted, 'base64')\n\n  const nonce = ciphertext.subarray(0, 12)\n  const authTag = ciphertext.subarray(-16)\n  ciphertext = ciphertext.subarray(12, -16)\n\n  try {\n    const aesgcm = crypto.createDecipheriv('aes-256-gcm', key, nonce)\n    aesgcm.setAuthTag(authTag)\n    return `${aesgcm.update(ciphertext)}${aesgcm.final()}`\n  } catch (error) {\n    const isRange = error instanceof RangeError\n    const invalidKeyLength = error.message === 'Invalid key length'\n    const decryptionFailed = error.message === 'Unsupported state or unable to authenticate data'\n\n    if (isRange || invalidKeyLength) {\n      const err = new Error('INVALID_DOTENV_KEY: It must be 64 characters long (or more)')\n      err.code = 'INVALID_DOTENV_KEY'\n      throw err\n    } else if (decryptionFailed) {\n      const err = new Error('DECRYPTION_FAILED: Please check your DOTENV_KEY')\n      err.code = 'DECRYPTION_FAILED'\n      throw err\n    } else {\n      throw error\n    }\n  }\n}\n\n// Populate process.env with parsed values\nfunction populate (processEnv, parsed, options = {}) {\n  const debug = Boolean(options && options.debug)\n  const override = Boolean(options && options.override)\n\n  if (typeof parsed !== 'object') {\n    const err = new Error('OBJECT_REQUIRED: Please check the processEnv argument being passed to populate')\n    err.code = 'OBJECT_REQUIRED'\n    throw err\n  }\n\n  // Set process.env\n  for (const key of Object.keys(parsed)) {\n    if (Object.prototype.hasOwnProperty.call(processEnv, key)) {\n      if (override === true) {\n        processEnv[key] = parsed[key]\n      }\n\n      if (debug) {\n        if (override === true) {\n          _debug(`\"${key}\" is already defined and WAS overwritten`)\n        } else {\n          _debug(`\"${key}\" is already defined and was NOT overwritten`)\n        }\n      }\n    } else {\n      processEnv[key] = parsed[key]\n    }\n  }\n}\n\nconst DotenvModule = {\n  configDotenv,\n  _configVault,\n  _parseVault,\n  config,\n  decrypt,\n  parse,\n  populate\n}\n\nmodule.exports.configDotenv = DotenvModule.configDotenv\nmodule.exports._configVault = DotenvModule._configVault\nmodule.exports._parseVault = DotenvModule._parseVault\nmodule.exports.config = DotenvModule.config\nmodule.exports.decrypt = DotenvModule.decrypt\nmodule.exports.parse = DotenvModule.parse\nmodule.exports.populate = DotenvModule.populate\n\nmodule.exports = DotenvModule\n","import OpenAI from 'openai';\nimport dotenv from 'dotenv';\n\ndotenv.config();\n\nexport type ContentType = 'text' | 'image' | 'tweet' | 'blog' | 'code' | 'email' | 'social';\n\ninterface PromptTemplate {\n  systemPrompt: string;\n  userPromptTemplate: string;\n}\n\nconst TEMPLATES: Record<ContentType, PromptTemplate> = {\n  text: {\n    systemPrompt: \"You are a creative writer and content creator.\",\n    userPromptTemplate: \"{prompt}\"\n  },\n  image: {\n    systemPrompt: \"Create detailed image descriptions.\",\n    userPromptTemplate: \"Create a detailed, vivid image of: {prompt}\"\n  },\n  tweet: {\n    systemPrompt: \"You are a social media expert who creates engaging tweets within 280 characters.\",\n    userPromptTemplate: \"Create an engaging tweet about: {prompt}\"\n  },\n  blog: {\n    systemPrompt: \"You are a professional blog writer who creates well-structured, engaging blog posts.\",\n    userPromptTemplate: \"Write a blog post about: {prompt}\\n\\nMake it engaging and include a clear structure with headings.\"\n  },\n  code: {\n    systemPrompt: \"You are a senior software developer who writes clean, well-documented code.\",\n    userPromptTemplate: \"Write code for: {prompt}\\n\\nInclude comments and explain any complex parts.\"\n  },\n  email: {\n    systemPrompt: \"You are a professional email writer who creates clear, concise, and effective emails.\",\n    userPromptTemplate: \"Write an email about: {prompt}\\n\\nMake it professional and to the point.\"\n  },\n  social: {\n    systemPrompt: \"You are a social media manager who creates engaging content for various platforms.\",\n    userPromptTemplate: \"Create a social media post about: {prompt}\\n\\nMake it engaging and shareable.\"\n  }\n};\n\nexport class OpenAIService {\n  private client: OpenAI;\n\n  constructor() {\n    if (!process.env.OPENAI_API_KEY) {\n      throw new Error('OPENAI_API_KEY is not set in environment variables');\n    }\n    \n    this.client = new OpenAI({\n      apiKey: process.env.OPENAI_API_KEY\n    });\n  }\n\n  private getPrompt(type: ContentType, userPrompt: string): OpenAI.Chat.Completions.ChatCompletionMessageParam[] {\n    const template = TEMPLATES[type];\n    const formattedUserPrompt = template.userPromptTemplate.replace('{prompt}', userPrompt);\n\n    return [\n      { role: 'system', content: template.systemPrompt },\n      { role: 'user', content: formattedUserPrompt }\n    ];\n  }\n\n  async generateContent(prompt: string, type: ContentType = 'text'): Promise<string> {\n    try {\n      if (type === 'image') {\n        const image = await this.client.images.generate({\n          model: \"dall-e-3\",\n          prompt: prompt,\n          n: 1,\n          size: \"1024x1024\",\n        });\n\n        return image.data[0]?.url || 'No image generated';\n      }\n\n      const messages = this.getPrompt(type, prompt);\n      const completion = await this.client.chat.completions.create({\n        messages,\n        model: 'gpt-4-turbo-preview',\n        temperature: type === 'code' ? 0.2 : 0.7, // Lower temperature for code generation\n        max_tokens: type === 'tweet' ? 100 : 1000,\n      });\n\n      return completion.choices[0]?.message?.content || 'No content generated';\n    } catch (error) {\n      console.error('Error generating content:', error);\n      throw new Error('Failed to generate content');\n    }\n  }\n} ","import { WebSocketManager } from './core/websocket-manager';\nimport { OpenAIService } from './core/openai-service';\n\ninterface StreamDeckEvent {\n  action: string;\n  event: string;\n  context: string;\n  payload: any;\n}\n\nclass AIContentCreatorPlugin {\n  private ws: WebSocketManager;\n  private openai: OpenAIService;\n  private contexts: Map<string, { prompt: string }>;\n  private outputWindow: Window | null = null;\n\n  constructor() {\n    // Get connection parameters from environment\n    const args = process.argv;\n    const port = args[2];\n    const pluginUUID = args[4];\n    const registerEvent = args[6];\n    const info = args[8];\n\n    this.contexts = new Map();\n    \n    // Initialize WebSocket connection\n    this.ws = new WebSocketManager(\n      parseInt(port),\n      pluginUUID,\n      registerEvent,\n      info\n    );\n\n    // Initialize OpenAI service\n    this.openai = new OpenAIService();\n\n    // Set up message handling\n    this.ws.onMessage(this.handleMessage.bind(this));\n\n    // Initialize output window\n    this.createOutputWindow();\n  }\n\n  private createOutputWindow() {\n    const width = 600;\n    const height = 800;\n    const left = screen.width - width;\n    const top = (screen.height - height) / 2;\n\n    this.outputWindow = window.open(\n      'output.html',\n      'AI Content Output',\n      `width=${width},height=${height},left=${left},top=${top}`\n    );\n  }\n\n  private async handleMessage(message: StreamDeckEvent): Promise<void> {\n    switch (message.event) {\n      case 'keyDown':\n        await this.handleKeyDown(message.context, message.action);\n        break;\n      case 'willAppear':\n        this.contexts.set(message.context, {\n          prompt: message.payload?.settings?.prompt || this.getDefaultPrompt(message.action)\n        });\n        break;\n      case 'didReceiveSettings':\n        this.contexts.set(message.context, {\n          prompt: message.payload?.settings?.prompt || this.getDefaultPrompt(message.action)\n        });\n        break;\n    }\n  }\n\n  private getDefaultPrompt(action: string): string {\n    const defaults = {\n      'com.elgato.ai-content-creator.text': 'Generate a creative story',\n      'com.elgato.ai-content-creator.tweet': 'Write an engaging tweet about technology',\n      'com.elgato.ai-content-creator.blog': 'Write a blog post about AI',\n      'com.elgato.ai-content-creator.code': 'Write a Hello World program',\n      'com.elgato.ai-content-creator.image': 'A futuristic cityscape at night'\n    };\n    return defaults[action] || 'Generate content';\n  }\n\n  private getContentType(action: string): ContentType {\n    const types = {\n      'com.elgato.ai-content-creator.text': 'text',\n      'com.elgato.ai-content-creator.tweet': 'tweet',\n      'com.elgato.ai-content-creator.blog': 'blog',\n      'com.elgato.ai-content-creator.code': 'code',\n      'com.elgato.ai-content-creator.image': 'image'\n    };\n    return types[action] as ContentType || 'text';\n  }\n\n  private async handleKeyDown(context: string, action: string): Promise<void> {\n    try {\n      const settings = this.contexts.get(context);\n      if (!settings) return;\n\n      this.ws.setTitle(context, '...');\n      \n      const contentType = this.getContentType(action);\n      const content = await this.openai.generateContent(\n        settings.prompt,\n        contentType\n      );\n\n      // Display content in output window\n      if (this.outputWindow) {\n        this.outputWindow.postMessage({ content, type: contentType }, '*');\n      }\n\n      this.ws.showOk(context);\n      this.ws.setTitle(context, 'Done!');\n      \n      setTimeout(() => {\n        this.ws.setTitle(context, '');\n      }, 2000);\n    } catch (error) {\n      console.error('Error handling key down:', error);\n      this.ws.showAlert(context);\n      this.ws.setTitle(context, 'Error');\n    }\n  }\n}\n\n// Start the plugin\nnew AIContentCreatorPlugin(); "],"names":["mainModule"],"mappings":";;;;;;MAEa,gBAAgB,CAAA;AAI3B,IAAA,WAAA,CAAY,IAAY,EAAE,UAAkB,EAAE,aAAqB,EAAE,IAAY,EAAA;AAC/E,QAAA,IAAI,CAAC,UAAU,GAAG,UAAU;QAC5B,IAAI,CAAC,EAAE,GAAG,IAAI,SAAS,CAAC,CAAkB,eAAA,EAAA,IAAI,CAAE,CAAA,CAAC;QAEjD,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,MAAM,EAAE,MAAK;AACtB,YAAA,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,IAAI,CAAC;AACpC,SAAC,CAAC;;IAGI,QAAQ,CAAC,KAAa,EAAE,IAAY,EAAA;QAC1C,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;AAC1B,YAAA,KAAK,EAAE,KAAK;YACZ,IAAI,EAAE,IAAI,CAAC;AACZ,SAAA,CAAC,CAAC;;AAGE,IAAA,IAAI,CAAC,KAAa,EAAE,OAAe,EAAE,UAAe,EAAE,EAAA;QAC3D,IAAI,IAAI,CAAC,EAAE,CAAC,UAAU,KAAK,SAAS,CAAC,IAAI,EAAE;YACzC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;AAC1B,gBAAA,MAAM,EAAE,KAAK;AACb,gBAAA,KAAK,EAAE,cAAc;AACrB,gBAAA,OAAO,EAAE,OAAO;AAChB,gBAAA,OAAO,EAAE;AACV,aAAA,CAAC,CAAC;;;AAIA,IAAA,SAAS,CAAC,OAAe,EAAA;QAC9B,IAAI,IAAI,CAAC,EAAE,CAAC,UAAU,KAAK,SAAS,CAAC,IAAI,EAAE;YACzC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;AAC1B,gBAAA,KAAK,EAAE,WAAW;AAClB,gBAAA,OAAO,EAAE;AACV,aAAA,CAAC,CAAC;;;AAIA,IAAA,MAAM,CAAC,OAAe,EAAA;QAC3B,IAAI,IAAI,CAAC,EAAE,CAAC,UAAU,KAAK,SAAS,CAAC,IAAI,EAAE;YACzC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;AAC1B,gBAAA,KAAK,EAAE,QAAQ;AACf,gBAAA,OAAO,EAAE;AACV,aAAA,CAAC,CAAC;;;IAIA,QAAQ,CAAC,OAAe,EAAE,KAAa,EAAA;QAC5C,IAAI,IAAI,CAAC,EAAE,CAAC,UAAU,KAAK,SAAS,CAAC,IAAI,EAAE;YACzC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;AAC1B,gBAAA,KAAK,EAAE,UAAU;AACjB,gBAAA,OAAO,EAAE,OAAO;AAChB,gBAAA,OAAO,EAAE;AACP,oBAAA,KAAK,EAAE;AACR;AACF,aAAA,CAAC,CAAC;;;IAIA,QAAQ,CAAC,OAAe,EAAE,KAAa,EAAA;QAC5C,IAAI,IAAI,CAAC,EAAE,CAAC,UAAU,KAAK,SAAS,CAAC,IAAI,EAAE;YACzC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;AAC1B,gBAAA,KAAK,EAAE,UAAU;AACjB,gBAAA,OAAO,EAAE,OAAO;AAChB,gBAAA,OAAO,EAAE;AACP,oBAAA,KAAK,EAAE;AACR;AACF,aAAA,CAAC,CAAC;;;AAIA,IAAA,SAAS,CAAC,QAAgC,EAAA;QAC/C,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,IAAoB,KAAI;YAC7C,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC3C,QAAQ,CAAC,OAAO,CAAC;AACnB,SAAC,CAAC;;AAEL;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFD,MAAM,EAAE,GAAG;AACX,MAAM,IAAI,GAAG;AACb,MAAM,EAAE,GAAG;AACX,MAAM,MAAM,GAAG;AACf,MAAM,WAAW,GAAG;;AAEpB,MAAM,OAAO,GAAG,WAAW,CAAC;;AAE5B,MAAM,IAAI,GAAG;;AAEb;AACA,SAAS,KAAK,EAAE,GAAG,EAAE;AACrB,EAAE,MAAM,GAAG,GAAG;;AAEd;AACA,EAAE,IAAI,KAAK,GAAG,GAAG,CAAC,QAAQ;;AAE1B;AACA,EAAE,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,SAAS,EAAE,IAAI;;AAEvC,EAAE,IAAI;AACN,EAAE,OAAO,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE;AAC7C,IAAI,MAAM,GAAG,GAAG,KAAK,CAAC,CAAC;;AAEvB;AACA,IAAI,IAAI,KAAK,IAAI,KAAK,CAAC,CAAC,CAAC,IAAI,EAAE;;AAE/B;AACA,IAAI,KAAK,GAAG,KAAK,CAAC,IAAI;;AAEtB;AACA,IAAI,MAAM,UAAU,GAAG,KAAK,CAAC,CAAC;;AAE9B;AACA,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,wBAAwB,EAAE,IAAI;;AAExD;AACA,IAAI,IAAI,UAAU,KAAK,GAAG,EAAE;AAC5B,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI;AACxC,MAAM,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI;AACxC;;AAEA;AACA,IAAI,GAAG,CAAC,GAAG,CAAC,GAAG;AACf;;AAEA,EAAE,OAAO;AACT;;AAEA,SAAS,WAAW,EAAE,OAAO,EAAE;AAC/B,EAAE,MAAM,SAAS,GAAG,UAAU,CAAC,OAAO;;AAEtC;AACA,EAAE,MAAM,MAAM,GAAG,YAAY,CAAC,YAAY,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE;AAC9D,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;AACtB,IAAI,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,CAAC,2BAA2B,EAAE,SAAS,CAAC,sBAAsB,CAAC;AACzF,IAAI,GAAG,CAAC,IAAI,GAAG;AACf,IAAI,MAAM;AACV;;AAEA;AACA;AACA,EAAE,MAAM,IAAI,GAAG,UAAU,CAAC,OAAO,CAAC,CAAC,KAAK,CAAC,GAAG;AAC5C,EAAE,MAAM,MAAM,GAAG,IAAI,CAAC;;AAEtB,EAAE,IAAI;AACN,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;AACnC,IAAI,IAAI;AACR;AACA,MAAM,MAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI;;AAE9B;AACA,MAAM,MAAM,KAAK,GAAG,aAAa,CAAC,MAAM,EAAE,GAAG;;AAE7C;AACA,MAAM,SAAS,GAAG,YAAY,CAAC,OAAO,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,GAAG;;AAElE,MAAM;AACN,KAAK,CAAC,OAAO,KAAK,EAAE;AACpB;AACA,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,MAAM,EAAE;AAC3B,QAAQ,MAAM;AACd;AACA;AACA;AACA;;AAEA;AACA,EAAE,OAAO,YAAY,CAAC,KAAK,CAAC,SAAS;AACrC;;AAEA,SAAS,IAAI,EAAE,OAAO,EAAE;AACxB,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACpD;;AAEA,SAAS,KAAK,EAAE,OAAO,EAAE;AACzB,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACpD;;AAEA,SAAS,MAAM,EAAE,OAAO,EAAE;AAC1B,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE,OAAO,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AACrD;;AAEA,SAAS,UAAU,EAAE,OAAO,EAAE;AAC9B;AACA,EAAE,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,IAAI,OAAO,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;AACtE,IAAI,OAAO,OAAO,CAAC;AACnB;;AAEA;AACA,EAAE,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,IAAI,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;AACnE,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC;AACvB;;AAEA;AACA,EAAE,OAAO;AACT;;AAEA,SAAS,aAAa,EAAE,MAAM,EAAE,SAAS,EAAE;AAC3C;AACA,EAAE,IAAI;AACN,EAAE,IAAI;AACN,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC,SAAS;AAC3B,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,IAAI,KAAK,CAAC,IAAI,KAAK,iBAAiB,EAAE;AAC1C,MAAM,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,4IAA4I;AACxK,MAAM,GAAG,CAAC,IAAI,GAAG;AACjB,MAAM,MAAM;AACZ;;AAEA,IAAI,MAAM;AACV;;AAEA;AACA,EAAE,MAAM,GAAG,GAAG,GAAG,CAAC;AAClB,EAAE,IAAI,CAAC,GAAG,EAAE;AACZ,IAAI,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,sCAAsC;AAChE,IAAI,GAAG,CAAC,IAAI,GAAG;AACf,IAAI,MAAM;AACV;;AAEA;AACA,EAAE,MAAM,WAAW,GAAG,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,aAAa;AACxD,EAAE,IAAI,CAAC,WAAW,EAAE;AACpB,IAAI,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,8CAA8C;AACxE,IAAI,GAAG,CAAC,IAAI,GAAG;AACf,IAAI,MAAM;AACV;;AAEA;AACA,EAAE,MAAM,cAAc,GAAG,CAAC,aAAa,EAAE,WAAW,CAAC,WAAW,EAAE,CAAC;AACnE,EAAE,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,cAAc,EAAC;AAClD,EAAE,IAAI,CAAC,UAAU,EAAE;AACnB,IAAI,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,CAAC,wDAAwD,EAAE,cAAc,CAAC,yBAAyB,CAAC;AAC9H,IAAI,GAAG,CAAC,IAAI,GAAG;AACf,IAAI,MAAM;AACV;;AAEA,EAAE,OAAO,EAAE,UAAU,EAAE,GAAG;AAC1B;;AAEA,SAAS,UAAU,EAAE,OAAO,EAAE;AAC9B,EAAE,IAAI,iBAAiB,GAAG;;AAE1B,EAAE,IAAI,OAAO,IAAI,OAAO,CAAC,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AAC1D,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACrC,MAAM,KAAK,MAAM,QAAQ,IAAI,OAAO,CAAC,IAAI,EAAE;AAC3C,QAAQ,IAAI,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE;AACrC,UAAU,iBAAiB,GAAG,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,QAAQ,GAAG,CAAC,EAAE,QAAQ,CAAC,MAAM;AACzF;AACA;AACA,KAAK,MAAM;AACX,MAAM,iBAAiB,GAAG,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,OAAO,CAAC,IAAI,GAAG,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM;AACjG;AACA,GAAG,MAAM;AACT,IAAI,iBAAiB,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,YAAY;AAChE;;AAEA,EAAE,IAAI,EAAE,CAAC,UAAU,CAAC,iBAAiB,CAAC,EAAE;AACxC,IAAI,OAAO;AACX;;AAEA,EAAE,OAAO;AACT;;AAEA,SAAS,YAAY,EAAE,OAAO,EAAE;AAChC,EAAE,OAAO,OAAO,CAAC,CAAC,CAAC,KAAK,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG;AAC1E;;AAEA,SAAS,YAAY,EAAE,OAAO,EAAE;AAChC,EAAE,IAAI,CAAC,uCAAuC;;AAE9C,EAAE,MAAM,MAAM,GAAG,YAAY,CAAC,WAAW,CAAC,OAAO;;AAEjD,EAAE,IAAI,UAAU,GAAG,OAAO,CAAC;AAC3B,EAAE,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,IAAI,IAAI,EAAE;AAC7C,IAAI,UAAU,GAAG,OAAO,CAAC;AACzB;;AAEA,EAAE,YAAY,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,EAAE,OAAO;;AAEnD,EAAE,OAAO,EAAE,MAAM;AACjB;;AAEA,SAAS,YAAY,EAAE,OAAO,EAAE;AAChC,EAAE,MAAM,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,MAAM;AACvD,EAAE,IAAI,QAAQ,GAAG;AACjB,EAAE,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK;;AAEhD,EAAE,IAAI,OAAO,IAAI,OAAO,CAAC,QAAQ,EAAE;AACnC,IAAI,QAAQ,GAAG,OAAO,CAAC;AACvB,GAAG,MAAM;AACT,IAAI,IAAI,KAAK,EAAE;AACf,MAAM,MAAM,CAAC,oDAAoD;AACjE;AACA;;AAEA,EAAE,IAAI,WAAW,GAAG,CAAC,UAAU,EAAC;AAChC,EAAE,IAAI,OAAO,IAAI,OAAO,CAAC,IAAI,EAAE;AAC/B,IAAI,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACtC,MAAM,WAAW,GAAG,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC;AAC/C,KAAK,MAAM;AACX,MAAM,WAAW,GAAG,GAAE;AACtB,MAAM,KAAK,MAAM,QAAQ,IAAI,OAAO,CAAC,IAAI,EAAE;AAC3C,QAAQ,WAAW,CAAC,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC;AAC/C;AACA;AACA;;AAEA;AACA;AACA,EAAE,IAAI;AACN,EAAE,MAAM,SAAS,GAAG;AACpB,EAAE,KAAK,MAAM,IAAI,IAAI,WAAW,EAAE;AAClC,IAAI,IAAI;AACR;AACA,MAAM,MAAM,MAAM,GAAG,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,EAAE,QAAQ,EAAE,CAAC;;AAE3E,MAAM,YAAY,CAAC,QAAQ,CAAC,SAAS,EAAE,MAAM,EAAE,OAAO;AACtD,KAAK,CAAC,OAAO,CAAC,EAAE;AAChB,MAAM,IAAI,KAAK,EAAE;AACjB,QAAQ,MAAM,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC;AACpD;AACA,MAAM,SAAS,GAAG;AAClB;AACA;;AAEA,EAAE,IAAI,UAAU,GAAG,OAAO,CAAC;AAC3B,EAAE,IAAI,OAAO,IAAI,OAAO,CAAC,UAAU,IAAI,IAAI,EAAE;AAC7C,IAAI,UAAU,GAAG,OAAO,CAAC;AACzB;;AAEA,EAAE,YAAY,CAAC,QAAQ,CAAC,UAAU,EAAE,SAAS,EAAE,OAAO;;AAEtD,EAAE,IAAI,SAAS,EAAE;AACjB,IAAI,OAAO,EAAE,MAAM,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS;AAChD,GAAG,MAAM;AACT,IAAI,OAAO,EAAE,MAAM,EAAE,SAAS;AAC9B;AACA;;AAEA;AACA,SAAS,MAAM,EAAE,OAAO,EAAE;AAC1B;AACA,EAAE,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,CAAC,EAAE;AACxC,IAAI,OAAO,YAAY,CAAC,YAAY,CAAC,OAAO;AAC5C;;AAEA,EAAE,MAAM,SAAS,GAAG,UAAU,CAAC,OAAO;;AAEtC;AACA,EAAE,IAAI,CAAC,SAAS,EAAE;AAClB,IAAI,KAAK,CAAC,CAAC,4DAA4D,EAAE,SAAS,CAAC,6BAA6B,CAAC;;AAEjH,IAAI,OAAO,YAAY,CAAC,YAAY,CAAC,OAAO;AAC5C;;AAEA,EAAE,OAAO,YAAY,CAAC,YAAY,CAAC,OAAO;AAC1C;;AAEA,SAAS,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;AACrC,EAAE,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,KAAK;AAClD,EAAE,IAAI,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ;;AAElD,EAAE,MAAM,KAAK,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC,EAAE,EAAE;AACzC,EAAE,MAAM,OAAO,GAAG,UAAU,CAAC,QAAQ,CAAC,GAAG;AACzC,EAAE,UAAU,GAAG,UAAU,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG;;AAE1C,EAAE,IAAI;AACN,IAAI,MAAM,MAAM,GAAG,MAAM,CAAC,gBAAgB,CAAC,aAAa,EAAE,GAAG,EAAE,KAAK;AACpE,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO;AAC7B,IAAI,OAAO,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,EAAE,MAAM,CAAC,KAAK,EAAE,CAAC;AACzD,GAAG,CAAC,OAAO,KAAK,EAAE;AAClB,IAAI,MAAM,OAAO,GAAG,KAAK,YAAY;AACrC,IAAI,MAAM,gBAAgB,GAAG,KAAK,CAAC,OAAO,KAAK;AAC/C,IAAI,MAAM,gBAAgB,GAAG,KAAK,CAAC,OAAO,KAAK;;AAE/C,IAAI,IAAI,OAAO,IAAI,gBAAgB,EAAE;AACrC,MAAM,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,6DAA6D;AACzF,MAAM,GAAG,CAAC,IAAI,GAAG;AACjB,MAAM,MAAM;AACZ,KAAK,MAAM,IAAI,gBAAgB,EAAE;AACjC,MAAM,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,iDAAiD;AAC7E,MAAM,GAAG,CAAC,IAAI,GAAG;AACjB,MAAM,MAAM;AACZ,KAAK,MAAM;AACX,MAAM,MAAM;AACZ;AACA;AACA;;AAEA;AACA,SAAS,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,OAAO,GAAG,EAAE,EAAE;AACrD,EAAE,MAAM,KAAK,GAAG,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK;AAChD,EAAE,MAAM,QAAQ,GAAG,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,QAAQ;;AAEtD,EAAE,IAAI,OAAO,MAAM,KAAK,QAAQ,EAAE;AAClC,IAAI,MAAM,GAAG,GAAG,IAAI,KAAK,CAAC,gFAAgF;AAC1G,IAAI,GAAG,CAAC,IAAI,GAAG;AACf,IAAI,MAAM;AACV;;AAEA;AACA,EAAE,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE;AACzC,IAAI,IAAI,MAAM,CAAC,SAAS,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE;AAC/D,MAAM,IAAI,QAAQ,KAAK,IAAI,EAAE;AAC7B,QAAQ,UAAU,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG;AACpC;;AAEA,MAAM,IAAI,KAAK,EAAE;AACjB,QAAQ,IAAI,QAAQ,KAAK,IAAI,EAAE;AAC/B,UAAU,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,wCAAwC,CAAC;AAClE,SAAS,MAAM;AACf,UAAU,MAAM,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,4CAA4C,CAAC;AACtE;AACA;AACA,KAAK,MAAM;AACX,MAAM,UAAU,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,GAAG;AAClC;AACA;AACA;;AAEA,MAAM,YAAY,GAAG;AACrB,EAAE,YAAY;AACd,EAAE,YAAY;AACd,EAAE,WAAW;AACb,EAAE,MAAM;AACR,EAAE,OAAO;AACT,EAAE,KAAK;AACP,EAAE;AACF;;AAE2BA,MAAA,CAAA,OAAA,CAAA,YAAA,GAAG,YAAY,CAAC;AAChBA,MAAA,CAAA,OAAA,CAAA,YAAA,GAAG,YAAY,CAAC;AACjBA,MAAA,CAAA,OAAA,CAAA,WAAA,GAAG,YAAY,CAAC;AACrBA,MAAA,CAAA,OAAA,CAAA,MAAA,GAAG,YAAY,CAAC;AACfA,MAAA,CAAA,OAAA,CAAA,OAAA,GAAG,YAAY,CAAC;AAClBA,MAAA,CAAA,OAAA,CAAA,KAAA,GAAG,YAAY,CAAC;AACbA,MAAA,CAAA,OAAA,CAAA,QAAA,GAAG,YAAY,CAAC;;AAEvCA,MAAA,CAAA,OAAc,GAAG;;;;;ACrWjB,MAAM,CAAC,MAAM,EAAE;AASf,MAAM,SAAS,GAAwC;AACrD,IAAA,IAAI,EAAE;AACJ,QAAA,YAAY,EAAE,gDAAgD;AAC9D,QAAA,kBAAkB,EAAE;AACrB,KAAA;AACD,IAAA,KAAK,EAAE;AACL,QAAA,YAAY,EAAE,qCAAqC;AACnD,QAAA,kBAAkB,EAAE;AACrB,KAAA;AACD,IAAA,KAAK,EAAE;AACL,QAAA,YAAY,EAAE,kFAAkF;AAChG,QAAA,kBAAkB,EAAE;AACrB,KAAA;AACD,IAAA,IAAI,EAAE;AACJ,QAAA,YAAY,EAAE,sFAAsF;AACpG,QAAA,kBAAkB,EAAE;AACrB,KAAA;AACD,IAAA,IAAI,EAAE;AACJ,QAAA,YAAY,EAAE,6EAA6E;AAC3F,QAAA,kBAAkB,EAAE;AACrB,KAAA;AACD,IAAA,KAAK,EAAE;AACL,QAAA,YAAY,EAAE,uFAAuF;AACrG,QAAA,kBAAkB,EAAE;AACrB,KAAA;AACD,IAAA,MAAM,EAAE;AACN,QAAA,YAAY,EAAE,oFAAoF;AAClG,QAAA,kBAAkB,EAAE;AACrB;CACF;MAEY,aAAa,CAAA;AAGxB,IAAA,WAAA,GAAA;AACE,QAAA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE;AAC/B,YAAA,MAAM,IAAI,KAAK,CAAC,oDAAoD,CAAC;;AAGvE,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,MAAM,CAAC;AACvB,YAAA,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC;AACrB,SAAA,CAAC;;IAGI,SAAS,CAAC,IAAiB,EAAE,UAAkB,EAAA;AACrD,QAAA,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC;AAChC,QAAA,MAAM,mBAAmB,GAAG,QAAQ,CAAC,kBAAkB,CAAC,OAAO,CAAC,UAAU,EAAE,UAAU,CAAC;QAEvF,OAAO;YACL,EAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,YAAY,EAAE;AAClD,YAAA,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,mBAAmB;SAC7C;;AAGH,IAAA,MAAM,eAAe,CAAC,MAAc,EAAE,OAAoB,MAAM,EAAA;AAC9D,QAAA,IAAI;AACF,YAAA,IAAI,IAAI,KAAK,OAAO,EAAE;gBACpB,MAAM,KAAK,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;AAC9C,oBAAA,KAAK,EAAE,UAAU;AACjB,oBAAA,MAAM,EAAE,MAAM;AACd,oBAAA,CAAC,EAAE,CAAC;AACJ,oBAAA,IAAI,EAAE,WAAW;AAClB,iBAAA,CAAC;gBAEF,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,oBAAoB;;YAGnD,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,CAAC;AAC7C,YAAA,MAAM,UAAU,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;gBAC3D,QAAQ;AACR,gBAAA,KAAK,EAAE,qBAAqB;AAC5B,gBAAA,WAAW,EAAE,IAAI,KAAK,MAAM,GAAG,GAAG,GAAG,GAAG;gBACxC,UAAU,EAAE,IAAI,KAAK,OAAO,GAAG,GAAG,GAAG,IAAI;AAC1C,aAAA,CAAC;AAEF,YAAA,OAAO,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,EAAE,OAAO,IAAI,sBAAsB;;QACxE,OAAO,KAAK,EAAE;AACd,YAAA,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC;AACjD,YAAA,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC;;;AAGlD;;ACnFD,MAAM,sBAAsB,CAAA;AAM1B,IAAA,WAAA,GAAA;QAFQ,IAAY,CAAA,YAAA,GAAkB,IAAI;;AAIxC,QAAA,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI;AACzB,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;AACpB,QAAA,MAAM,UAAU,GAAG,IAAI,CAAC,CAAC,CAAC;AAC1B,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC;AAC7B,QAAA,MAAM,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC;AAEpB,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAE;;AAGzB,QAAA,IAAI,CAAC,EAAE,GAAG,IAAI,gBAAgB,CAC5B,QAAQ,CAAC,IAAI,CAAC,EACd,UAAU,EACV,aAAa,EACb,IAAI,CACL;;AAGD,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,aAAa,EAAE;;AAGjC,QAAA,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;QAGhD,IAAI,CAAC,kBAAkB,EAAE;;IAGnB,kBAAkB,GAAA;QACxB,MAAM,KAAK,GAAG,GAAG;QACjB,MAAM,MAAM,GAAG,GAAG;AAClB,QAAA,MAAM,IAAI,GAAG,MAAM,CAAC,KAAK,GAAG,KAAK;QACjC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC;QAExC,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,IAAI,CAC7B,aAAa,EACb,mBAAmB,EACnB,CAAS,MAAA,EAAA,KAAK,WAAW,MAAM,CAAA,MAAA,EAAS,IAAI,CAAQ,KAAA,EAAA,GAAG,CAAE,CAAA,CAC1D;;IAGK,MAAM,aAAa,CAAC,OAAwB,EAAA;AAClD,QAAA,QAAQ,OAAO,CAAC,KAAK;AACnB,YAAA,KAAK,SAAS;AACZ,gBAAA,MAAM,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,MAAM,CAAC;gBACzD;AACF,YAAA,KAAK,YAAY;gBACf,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE;AACjC,oBAAA,MAAM,EAAE,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM;AAClF,iBAAA,CAAC;gBACF;AACF,YAAA,KAAK,oBAAoB;gBACvB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE;AACjC,oBAAA,MAAM,EAAE,OAAO,CAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,IAAI,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM;AAClF,iBAAA,CAAC;gBACF;;;AAIE,IAAA,gBAAgB,CAAC,MAAc,EAAA;AACrC,QAAA,MAAM,QAAQ,GAAG;AACf,YAAA,oCAAoC,EAAE,2BAA2B;AACjE,YAAA,qCAAqC,EAAE,0CAA0C;AACjF,YAAA,oCAAoC,EAAE,4BAA4B;AAClE,YAAA,oCAAoC,EAAE,6BAA6B;AACnE,YAAA,qCAAqC,EAAE;SACxC;AACD,QAAA,OAAO,QAAQ,CAAC,MAAM,CAAC,IAAI,kBAAkB;;AAGvC,IAAA,cAAc,CAAC,MAAc,EAAA;AACnC,QAAA,MAAM,KAAK,GAAG;AACZ,YAAA,oCAAoC,EAAE,MAAM;AAC5C,YAAA,qCAAqC,EAAE,OAAO;AAC9C,YAAA,oCAAoC,EAAE,MAAM;AAC5C,YAAA,oCAAoC,EAAE,MAAM;AAC5C,YAAA,qCAAqC,EAAE;SACxC;AACD,QAAA,OAAO,KAAK,CAAC,MAAM,CAAgB,IAAI,MAAM;;AAGvC,IAAA,MAAM,aAAa,CAAC,OAAe,EAAE,MAAc,EAAA;AACzD,QAAA,IAAI;YACF,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,OAAO,CAAC;AAC3C,YAAA,IAAI,CAAC,QAAQ;gBAAE;YAEf,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,KAAK,CAAC;YAEhC,MAAM,WAAW,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;AAC/C,YAAA,MAAM,OAAO,GAAG,MAAM,IAAI,CAAC,MAAM,CAAC,eAAe,CAC/C,QAAQ,CAAC,MAAM,EACf,WAAW,CACZ;;AAGD,YAAA,IAAI,IAAI,CAAC,YAAY,EAAE;AACrB,gBAAA,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC,EAAE,OAAO,EAAE,IAAI,EAAE,WAAW,EAAE,EAAE,GAAG,CAAC;;AAGpE,YAAA,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,OAAO,CAAC;YACvB,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC;YAElC,UAAU,CAAC,MAAK;gBACd,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,EAAE,CAAC;aAC9B,EAAE,IAAI,CAAC;;QACR,OAAO,KAAK,EAAE;AACd,YAAA,OAAO,CAAC,KAAK,CAAC,0BAA0B,EAAE,KAAK,CAAC;AAChD,YAAA,IAAI,CAAC,EAAE,CAAC,SAAS,CAAC,OAAO,CAAC;YAC1B,IAAI,CAAC,EAAE,CAAC,QAAQ,CAAC,OAAO,EAAE,OAAO,CAAC;;;AAGvC;AAED;AACA,IAAI,sBAAsB,EAAE","x_google_ignoreList":[1]}
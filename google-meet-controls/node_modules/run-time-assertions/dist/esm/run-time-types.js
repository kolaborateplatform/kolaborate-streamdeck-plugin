import { AssertionError } from './assertion.error';
/** This function is not used at run time, it's only here for types. */
/* c8 ignore next 3 */
function rawGetTypeOf(x) {
    return typeof x;
}
/**
 * Gets the run time type of the input. Note that this returns `'array'` for arrays rather than
 * 'object' (vs the built-in `typeof` operator that return `'object'` for both arrays and objects.)
 */
export function getRunTimeType(input) {
    if (input === null) {
        return 'null';
    }
    else if (Array.isArray(input)) {
        return 'array';
    }
    else {
        return typeof input;
    }
}
/** Checks if the input matches the given test type. */
export function isRunTimeType(input, testType) {
    const inputType = getRunTimeType(input);
    return inputType === testType;
}
/**
 * Asserts that the given input matches the given test type. Note that an name for the input must be
 * provided for error messaging purposes.
 */
export function assertRunTimeType(input, testType, failureMessage) {
    if (!isRunTimeType(input, testType)) {
        throw new AssertionError(failureMessage ||
            `value is of type '${getRunTimeType(input)}' but type '${testType}' was expected.`);
    }
}

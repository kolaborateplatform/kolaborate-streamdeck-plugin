import { isObject } from '@augment-vir/common';
import { AssertionError } from '../assertion.error';
import { isStrictEqual } from './simple-equal';
/**
 * Checks if the input's object property values are strictly equal to each other. If the inputs are
 * not objects, perform the strict equality check on them directly.
 */
export function arePropsStrictEqual(a, b, customInnerEquality = isStrictEqual) {
    if (isObject(a) && isObject(b)) {
        const allKeys = Array.from(new Set([
            ...Object.keys(a),
            ...Object.keys(b),
        ]));
        return allKeys.every((key) => {
            const aValue = a[key];
            const bValue = b[key];
            return customInnerEquality(aValue, bValue);
        });
    }
    else {
        return customInnerEquality(a, b);
    }
}
/**
 * Asserts that given objects' property values are strictly equal to each other using
 * `arePropsStrictEqual`.
 */
export function assertPropsStrictEqual(a, b) {
    if (!arePropsStrictEqual(a, b)) {
        throw new AssertionError('Inputs are not strictly equal.');
    }
}

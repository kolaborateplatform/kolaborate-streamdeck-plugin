import type { MaybePromise, PartialAndNullable, TypedFunction } from '@augment-vir/common';
/** Matching options for a thrown error constructor or message string. */
export type ErrorMatchOptions = PartialAndNullable<{
    matchMessage: string | RegExp;
    matchConstructor: ErrorConstructor | typeof Error | {
        new (...args: any[]): Error;
    };
}>;
/** Allowed inputs for asserting if something throws. */
export type CallbackOrPromise = TypedFunction<[], MaybePromise<any>> | TypedFunction<[], Promise<any>> | TypedFunction<[], any> | Promise<any>;
/**
 * Asserts that the given callback or promise throws and that what it throws matches, if provided,
 * the provided constructor or message string.
 */
export declare function assertThrows(
/** The callback or promise to check for throwing. */
callback: Promise<any>, 
/** Optional matching options. */
matching?: ErrorMatchOptions | undefined, 
/** Message to include in the error if the provided callback or promise does not throw. */
failureMessage?: string): Promise<void>;
/**
 * Asserts that the given callback or promise throws and that what it throws matches, if provided,
 * the provided constructor or message string.
 */
export declare function assertThrows(
/** The callback or promise to check for throwing. */
callback: TypedFunction<[], Promise<any>>, 
/** Optional matching options. */
matching?: ErrorMatchOptions | undefined, 
/** Message to include in the error if the provided callback or promise does not throw. */
failureMessage?: string): Promise<void>;
/**
 * Asserts that the given callback or promise throws and that what it throws matches, if provided,
 * the provided constructor or message string.
 */
export declare function assertThrows(
/** The callback or promise to check for throwing. */
callback: TypedFunction<[], any>, 
/** Optional matching options. */
matching?: ErrorMatchOptions | undefined, 
/** Message to include in the error if the provided callback or promise does not throw. */
failureMessage?: string): void;
/**
 * Asserts that the given callback or promise throws and that what it throws matches, if provided,
 * the provided constructor or message string.
 */
export declare function assertThrows(
/** The callback or promise to check for throwing. */
callback: TypedFunction<[], MaybePromise<any>>, 
/** Optional matching options. */
matching?: ErrorMatchOptions | undefined, 
/** Message to include in the error if the provided callback or promise does not throw. */
failureMessage?: string): MaybePromise<void>;
/**
 * Asserts that the given callback or promise throws and that what it throws matches, if provided,
 * the provided constructor or message string.
 */
export declare function assertThrows(
/** The callback or promise to check for throwing. */
callbackOrPromise: CallbackOrPromise, 
/** Optional matching options. */
matching?: ErrorMatchOptions | undefined, 
/** Message to include in the error if the provided callback or promise does not throw. */
failureMessage?: string): MaybePromise<void>;

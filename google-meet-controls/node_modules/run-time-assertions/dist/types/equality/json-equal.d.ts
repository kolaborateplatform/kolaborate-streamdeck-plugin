import { JsonCompatibleValue } from '@augment-vir/common';
/**
 * An error that is thrown from isJsonEqual or assertJsonEqual if the inputs fail on
 * `JSON.stringify`.
 */
export declare class JsonStringifyError extends Error {
    name: string;
    constructor(message: string);
}
/**
 * Check if the inputs are equal via `JSON.stringify` (property order on objects does not matter).
 *
 * @throws `JsonStringifyError` if the inputs fail when passed to `JSON.stringify`.
 */
export declare function isJsonEqual(a: Readonly<JsonCompatibleValue | undefined>, b: Readonly<JsonCompatibleValue | undefined>): boolean;
/**
 * Asserts that the inputs are equal via `JSON.stringify` (property order on objects does not
 * matter).
 *
 * @throws `JsonStringifyError` if the inputs fail when passed to `JSON.stringify`.
 * @throws `AssertionError` if the assertion fails.
 */
export declare function assertJsonEqual(a: Readonly<JsonCompatibleValue | undefined>, b: Readonly<JsonCompatibleValue | undefined>): void;
/**
 * Checks for equality between inputs with JSON but ignores top-level properties that are not
 * serializable.
 *
 * @throws Nothing: always returns a boolean.
 */
export declare function isLooseJsonEqual(a: unknown, b: unknown): boolean;
/**
 * Asserts that the inputs are equal via `JSON.stringify` (property order on objects does not
 * matter).
 *
 * @throws `AssertionError` if the assertion fails.
 */
export declare function assertLooseJsonEqual(a: unknown, b: unknown): void;

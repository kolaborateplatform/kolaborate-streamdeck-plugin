"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.arePropsStrictEqual = arePropsStrictEqual;
exports.assertPropsStrictEqual = assertPropsStrictEqual;
const common_1 = require("@augment-vir/common");
const assertion_error_1 = require("../assertion.error");
const simple_equal_1 = require("./simple-equal");
/**
 * Checks if the input's object property values are strictly equal to each other. If the inputs are
 * not objects, perform the strict equality check on them directly.
 */
function arePropsStrictEqual(a, b, customInnerEquality = simple_equal_1.isStrictEqual) {
    if ((0, common_1.isObject)(a) && (0, common_1.isObject)(b)) {
        const allKeys = Array.from(new Set([
            ...Object.keys(a),
            ...Object.keys(b),
        ]));
        return allKeys.every((key) => {
            const aValue = a[key];
            const bValue = b[key];
            return customInnerEquality(aValue, bValue);
        });
    }
    else {
        return customInnerEquality(a, b);
    }
}
/**
 * Asserts that given objects' property values are strictly equal to each other using
 * `arePropsStrictEqual`.
 */
function assertPropsStrictEqual(a, b) {
    if (!arePropsStrictEqual(a, b)) {
        throw new assertion_error_1.AssertionError('Inputs are not strictly equal.');
    }
}

import { typedHasProperty } from './typed-has-property';
/** @deprecated This is the same as hasKey */
export function isKeyof(key, object) {
    return typedHasProperty(object, key);
}
export function getObjectTypedKeys(input) {
    let reflectKeys;
    try {
        reflectKeys = Reflect.ownKeys(input);
    }
    catch (error) { }
    return (reflectKeys ??
        [
            ...Object.keys(input),
            ...Object.getOwnPropertySymbols(input),
        ]);
}
export function getObjectTypedValues(input) {
    return getObjectTypedKeys(input).map((key) => input[key]);
}
export function getObjectTypedEntries(input) {
    return getObjectTypedKeys(input).map((key) => [
        key,
        input[key],
    ]);
}
export function getEntriesSortedByKey(input) {
    return Object.entries(input).sort((tupleA, tupleB) => tupleA[0].localeCompare(tupleB[0]));
}
export function typedObjectFromEntries(entries) {
    return Object.fromEntries(entries);
}

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDeferredPromiseWrapper = createDeferredPromiseWrapper;
function createDeferredPromiseWrapper() {
    let resolve;
    let reject;
    let settled = false;
    const promise = new Promise((resolveCallback, rejectCallback) => {
        resolve = (value) => {
            settled = true;
            return resolveCallback(value);
        };
        reject = (reason) => {
            settled = true;
            rejectCallback(reason);
        };
    });
    // no way to test this edge case
    // istanbul ignore next
    if (!resolve || !reject) {
        throw new Error(`Reject and resolve callbacks were not set by the promise constructor for ${createDeferredPromiseWrapper.name}.`);
    }
    return {
        promise,
        resolve,
        reject,
        isSettled() {
            return settled;
        },
    };
}

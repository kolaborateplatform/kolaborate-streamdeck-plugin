"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.wrapInTry = wrapInTry;
const run_time_assertions_1 = require("run-time-assertions");
const error_1 = require("./error");
function wrapInTry(callback, options = {}) {
    try {
        const value = callback();
        if (value instanceof Promise) {
            return value.catch((error) => {
                if (options.handleError) {
                    return options.handleError(error);
                }
                else if ((0, run_time_assertions_1.hasProperty)(options, 'fallbackValue')) {
                    return options.fallbackValue;
                }
                else {
                    return (0, error_1.ensureError)(error);
                }
            });
        }
        else {
            return value;
        }
    }
    catch (error) {
        if (options.handleError) {
            return options.handleError(error);
        }
        else if ((0, run_time_assertions_1.hasProperty)(options, 'fallbackValue')) {
            return options.fallbackValue;
        }
        else {
            return (0, error_1.ensureError)(error);
        }
    }
}

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.urlToSearchParamsObject = exports.objectToSearchParamsString = void 0;
const run_time_assertions_1 = require("run-time-assertions");
const boolean_1 = require("../boolean");
const common_string_1 = require("../common-string");
const matches_object_shape_1 = require("../object/matches-object-shape");
const prefixes_1 = require("./prefixes");
function objectToSearchParamsString(inputObject) {
    const valueStrings = Object.entries(inputObject)
        .map(([key, value,]) => {
        if (value == undefined) {
            return undefined;
        }
        return `${key}=${String(value)}`;
    })
        .filter(boolean_1.isTruthy);
    if (valueStrings.length) {
        return `?${valueStrings.join('&')}`;
    }
    else {
        return '';
    }
}
exports.objectToSearchParamsString = objectToSearchParamsString;
function splitSearchString(searchString) {
    const params = (0, prefixes_1.removePrefix)({ value: searchString, prefix: '?' }).split('&');
    const paramEntries = params
        .map((param) => {
        const [key, ...everythingElse] = (0, common_string_1.typedSplit)(param, '=');
        const value = everythingElse.join('');
        if (!value && !key) {
            return undefined;
        }
        return [
            key,
            value,
        ];
    })
        .filter(boolean_1.isTruthy);
    return paramEntries;
}
function urlToSearchParamsObject(inputUrl, verifyShape) {
    const ensuredUrl = (0, run_time_assertions_1.isRunTimeType)(inputUrl, 'string') ? new URL(inputUrl) : inputUrl;
    const searchEntries = splitSearchString(ensuredUrl.search);
    const paramsObject = Object.fromEntries(searchEntries);
    if (verifyShape) {
        (0, matches_object_shape_1.assertMatchesObjectShape)(paramsObject, verifyShape);
    }
    return paramsObject;
}
exports.urlToSearchParamsObject = urlToSearchParamsObject;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.typedObjectFromEntries = exports.getEntriesSortedByKey = exports.getObjectTypedEntries = exports.getObjectTypedValues = exports.getObjectTypedKeys = exports.isKeyof = void 0;
const typed_has_property_1 = require("./typed-has-property");
/** @deprecated This is the same as hasKey */
function isKeyof(key, object) {
    return (0, typed_has_property_1.typedHasProperty)(object, key);
}
exports.isKeyof = isKeyof;
function getObjectTypedKeys(input) {
    let reflectKeys;
    try {
        reflectKeys = Reflect.ownKeys(input);
    }
    catch (error) { }
    return (reflectKeys ??
        [
            ...Object.keys(input),
            ...Object.getOwnPropertySymbols(input),
        ]);
}
exports.getObjectTypedKeys = getObjectTypedKeys;
function getObjectTypedValues(input) {
    return getObjectTypedKeys(input).map((key) => input[key]);
}
exports.getObjectTypedValues = getObjectTypedValues;
function getObjectTypedEntries(input) {
    return getObjectTypedKeys(input).map((key) => [
        key,
        input[key],
    ]);
}
exports.getObjectTypedEntries = getObjectTypedEntries;
function getEntriesSortedByKey(input) {
    return Object.entries(input).sort((tupleA, tupleB) => tupleA[0].localeCompare(tupleB[0]));
}
exports.getEntriesSortedByKey = getEntriesSortedByKey;
function typedObjectFromEntries(entries) {
    return Object.fromEntries(entries);
}
exports.typedObjectFromEntries = typedObjectFromEntries;

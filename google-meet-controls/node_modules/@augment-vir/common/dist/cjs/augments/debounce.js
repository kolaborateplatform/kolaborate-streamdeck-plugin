"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.createDebounce = exports.DebounceStyle = void 0;
var DebounceStyle;
(function (DebounceStyle) {
    /**
     * Fires on the first call, then waits the given amount of milliseconds until a subsequent call
     * can be made.
     */
    DebounceStyle["FirstThenWait"] = "first-then-wait";
    /**
     * Waits the given amount of milliseconds after the first call and then fires the latest
     * assigned callback.
     */
    DebounceStyle["AfterWait"] = "after-wait";
})(DebounceStyle || (exports.DebounceStyle = DebounceStyle = {}));
function createDebounce(debounceStyle, debounceDuration) {
    let nextCallTimestamp = 0;
    let latestCallback = undefined;
    return (callback) => {
        latestCallback = callback;
        const now = Date.now();
        if (nextCallTimestamp > now) {
            return;
        }
        if (debounceStyle === DebounceStyle.FirstThenWait) {
            latestCallback();
        }
        else if (debounceStyle === DebounceStyle.AfterWait) {
            setTimeout(() => {
                /** Use whatever the latest latestCallback is. */
                latestCallback?.();
            }, debounceDuration.milliseconds);
        }
        nextCallTimestamp = now + debounceDuration.milliseconds;
    };
}
exports.createDebounce = createDebounce;

"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.typedHasProperties = exports.typedHasProperty = void 0;
const hasPropertyAttempts = [
    (object, key) => {
        return key in object;
    },
    (object, key) => {
        /** This handles cases where the input object can't use `in` directly, like string literals */
        return key in object.constructor.prototype;
    },
];
function typedHasProperty(inputObject, inputKey) {
    if (!inputObject) {
        return false;
    }
    return hasPropertyAttempts.some((attemptCallback) => {
        try {
            return attemptCallback(inputObject, inputKey);
        }
        catch (error) {
            return false;
        }
    });
}
exports.typedHasProperty = typedHasProperty;
function typedHasProperties(inputObject, inputKeys) {
    return inputObject && inputKeys.every((key) => typedHasProperty(inputObject, key));
}
exports.typedHasProperties = typedHasProperties;

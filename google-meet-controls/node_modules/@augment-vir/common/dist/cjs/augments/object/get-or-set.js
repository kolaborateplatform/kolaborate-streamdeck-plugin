"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getOrSet = exports.getOrSetFromMap = void 0;
const run_time_assertions_1 = require("run-time-assertions");
function getOrSetFromMap(map, key, createNewValueCallback) {
    const mapKey = key;
    if (map.has(mapKey)) {
        return map.get(mapKey);
    }
    else {
        const newValue = createNewValueCallback();
        map.set(mapKey, newValue);
        return newValue;
    }
}
exports.getOrSetFromMap = getOrSetFromMap;
function getOrSet(originalObject, key, createCallback) {
    if (key in originalObject) {
        return originalObject[key];
    }
    else {
        const createdValue = createCallback();
        if ((0, run_time_assertions_1.isPromise)(createdValue)) {
            return new Promise(async (resolve, reject) => {
                try {
                    const awaitedValue = await createdValue;
                    originalObject[key] = awaitedValue;
                    resolve(awaitedValue);
                }
                catch (error) {
                    reject(error);
                }
            });
        }
        else {
            originalObject[key] = createdValue;
            return createdValue;
        }
    }
}
exports.getOrSet = getOrSet;

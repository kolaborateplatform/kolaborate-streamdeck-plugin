import { hasProperty } from 'run-time-assertions';
import { ensureError } from './error';
export function wrapInTry(callback, options = {}) {
    try {
        const value = callback();
        if (value instanceof Promise) {
            return value.catch((error) => {
                if (options.handleError) {
                    return options.handleError(error);
                }
                else if (hasProperty(options, 'fallbackValue')) {
                    return options.fallbackValue;
                }
                else {
                    return ensureError(error);
                }
            });
        }
        else {
            return value;
        }
    }
    catch (error) {
        if (options.handleError) {
            return options.handleError(error);
        }
        else if (hasProperty(options, 'fallbackValue')) {
            return options.fallbackValue;
        }
        else {
            return ensureError(error);
        }
    }
}
